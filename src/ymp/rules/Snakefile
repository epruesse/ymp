import os

import ymp
from ymp.env import Env
from ymp.stage import Stage

icfg = ymp.get_config()
icfg.activate()

# make sure rules are executed in bash (not sh, dash or worse)
shell.executable(icfg.shell)

refname = str("({})".format("|".join(icfg.ref)))

wildcard_constraints:
    _YMP_DIR = "([^/]+\.|)",
    dir      = "[^/]+?",
    dir1     = "[^/]+",
    dir2     = "[^/]+",
    file     = "[^/]+",

    nodots   = "[^/.]+",
    query    = "[^/.]+",
    gene     = "[^/.]+",

    fracid   = "[0-9][0-9]",
    coverage = "[0-9]+",
    evalue   = "[0-9]+",
    length   = "[1-9][0-9]*",

    SRR = "[EDS]RR[0-9]+",
    reference = refname,
    refname = refname,
    assembler = "(mh|mhc|sp|trinity|ref_{})".format(refname),
    mapper = "(map_bbmap|map_bowtie2)",
    genefind = "(blast)",

    fasta = "(fasta|fna|fa)",
    fastp = "(fastp|faa)",
    fagz  = "(fasta|fna|fa)(|.gz)",
    fqgz  = "(fq)(|.gz)",

    by = "(\.by_[^./]*|)",
    REF = "(\.ref_[^./]*|)",
    target = "[^/.]+",
    source = "[^/.]+"

with Stage.new_registry() as stage, Env.new_registry() as env:
    for snakefile in icfg.snakefiles:
        include: snakefile

